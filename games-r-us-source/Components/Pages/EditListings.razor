@page "/editListing"

@using Microsoft.EntityFrameworkCore
@using System
@using System.Linq
@* @using System.Net.Http
@using System.Text *@
@using games_r_us_source.Components
@using games_r_us_source.Data
@* @using Microsoft.AspNetCore.Components.Forms *@

@* Enables onclick functions *@
@rendermode InteractiveServer
@* @inject IConfiguration config *@
@inject ApplicationDbContext dbContext

@* change name ?*@
@inject ApplicationUser applicationUser 

@* @inject IWebHostEnvironment Environment *@
@* @inject NavigationManager _navigationManager *@
@* @inject IDbContextFactory<ApplicationDbContext> dbContextFactory *@


    <AuthorizeView>

    @* <button @onclick="ShowModal" class="" >View my listings</button> *@

    </AuthorizeView>



@code {

    // Create a button named "View my listings" that when pressed opens up a showmodal popup
        // The popup should have a similar view as the home page layout ( maybe 1-2 listings per row)
        // There should be a button in the right corner that says "edit" and when pressed shows the layout as createListings or ListingsDetails
        // All the fields should then be editable except AuctionEnd and StartingPrice (if there has been a bid made)
        // There should be a cancel button that when pressed prompt the user if they really want to cancel their edit
        // The edit listing should have the same error handling as CreateListing and similar methods such as for images etc.
        // Does Blazor have a convenient way to call on methods from other razor pages?
        // When the user is done and pressed "save changes" there should be a promt saying "changes saved successfully" or something along those lines
        // When this is done the new changes should also be saved and overwritten in the database.
        // If the image was changed the old image should also be deleted
        // 
}
