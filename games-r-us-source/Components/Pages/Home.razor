@using Microsoft.EntityFrameworkCore
@using games_r_us_source.Components.Listing
@using games_r_us_source.Components.Account
@using games_r_us_source.Components.Account.CustomComponents
@using games_r_us_source.Components.Helpers
@using games_r_us_source.Data
@using Microsoft.EntityFrameworkCore
@page "/"
@rendermode InteractiveServer

<PageTitle>Home</PageTitle>

<h1>Hello, world!</h1>

<!-- Temporary for testing purposes -->
<LoginLogoutButton />

<!-- Temporary for testing purposes -->
<ProfileButton />

<ListingCreate />

<ListingSort OnSortResultsUpdated="HandleSorting" />

<!-- Only here as a template for how to show content if
	user is logged  in or not.
-->
<AuthorizeView>
	<Authorized>
		@* Display this content here if user is logged in *@
		@* content accesses the AuthenticationState of the logged in user *@
		@context.User.Identity.Name
	</Authorized>
	<NotAuthorized>
		@* Display this content here if user is not logged in *@
	</NotAuthorized>
</AuthorizeView>

<ListingDisplayAll />

<!-- Temporary for testing purposes -->
@* <ListingDetails CurrentListing="@CurrentListing"/> *@

@code {
	private List<Listing> listings = new List<Listing>();

	private void HandleSearchResults(List<Listing> results)
	{
		listings = results; // Updates the list that is passed to ListingsDisplayAll
		StateHasChanged(); // <-- this might be unnecessary
	}

	private void HandleSorting(List<Listing> sortResults)
	{
		listings = sortResults;
		StateHasChanged();
	}
}