@using Microsoft.EntityFrameworkCore
@using games_r_us_source.Data
@inject IDbContextFactory<ApplicationDbContext> ContextFactory
@inject NavigationManager NavigationManager

@if (!IsListingDeleted)
{
    <button @onclick="ShowConfirmationDialog" class="px-4 py-2 bg-red-500 text-white rounded hover:bg-red-600">Delete</button>
}

@if (ConfirmationDialog)
{
    <section class="inset-0 bg-black fixed flex items-center justify-center bg-opacity-50">
        <section class="bg-white p-4 rounded">
            <p class="mb-4">Are you sure you want to delete this listing?</p>
            <div class="space-x-4 flex justify-center">
                <button class="px-4 py-2 text-white bg-red-500 rounded" @onclick="RemoveListing">Yes</button>
                <button class="px-4 py-2 text-white bg-green-500 rounded" @onclick="() => ConfirmationDialog = false">No</button>
            </div>
        </section>
    </section>
}

@if (IsListingDeleted)
{
    <div class="text-green-500 mt-4">Listing successfully deleted</div>
}

@code {
    [Parameter]
    public int ListingID { get; set; }

    private bool IsListingDeleted { get; set; } = false;
    private bool ConfirmationDialog { get; set; } = false;

    private async Task ShowConfirmationDialog()
    {
        ConfirmationDialog = true;
    }

    private async Task RemoveListing()
    {
        using (var dbContext = ContextFactory.CreateDbContext())
        {
            dbContext.Listings.Remove(new Listing { ID = ListingID });
            await dbContext.SaveChangesAsync();
            IsListingDeleted = true;
            ConfirmationDialog = false;
            NavigationManager.NavigateTo("/", forceLoad: true);
        }
    }
}


