@using games_r_us_source.Data;
@using games_r_us_source.Components.Bid;
@using Components.Helpers;
@rendermode InteractiveServer
@inject ApplicationDbContext dbContext;

<article class="font-[Kadwa] border-2 m-auto flex h-fit w-1/2 flex-col rounded-2xl border-blue-800 bg-gray-200 p-4 text-center md:flex-row">
    <img class="mb-6 mr-2 rounded object-contain drop-shadow-2xl xl:object-cover md:w-1/2 md:mb-0" src="@CurrentListing.ImagePath" alt="@CurrentListing.Name" />

    <div class="pl-2 md:w-1/2">
        <span class="text-gray-800">
            In
        </span>

        <!-- TODO: Add breadcrumb navigation when search/filter functionality works -->
        <a class="text-blue-700 underline" href="#">
            @CurrentListing.Platform
        </a>

        @if (CurrentListing.GameCategory != null)
        {
            <span class="text-gray-800"> > </span>
            <a class="text-blue-700 underline" href="#">
                @CurrentListing.GameCategory
            </a>
        }

        <div class="mt-10 flex h-1/2 flex-col justify-between">
            <h3 class="text-2xl font-bold uppercase">@CurrentListing.Name</h3>

            <div class="mt-8 flex flex-col justify-evenly md:flex-row">
                <div>
                    @if (HighestBid != null)
                    {
                        <p>Highest bid at </p> <span class="font-bold">$@HighestBid.Amount</span>
                    }
                    else
                    {
                        <p>Starting at </p>

                        <span class="font-bold">$@CurrentListing.StartingPrice</span>
                    }
                </div>

                <!-- Vertical divider -->
                <div class="border-r-2 hidden border-gray-400 md:block"></div>

                <!-- Show tooltip on hover -->
                <div class="group relative mt-4 inline-block cursor-help md:mt-0">
                    <p>Ends in</p><span class="border-b-2 border-dotted border-black text-red-700">@GetTimeDifference(CurrentListing.AuctionEnd)</span>
                    <span class="-ml-[70%] invisible absolute bottom-full left-1/2 w-fit text-nowrap rounded bg-black text-white opacity-70 group-hover:visible">@CurrentListing.AuctionEnd</span>
                </div>
            </div>


            <section class="mt-8">
                <!-- If description is too long, put it in a details element instead -->
                @if (CurrentListing.Description is not null && CurrentListing.Description.Length > 200)
                {
                    <details class="text-left"><summary>Description</summary>@CurrentListing.Description</details>
                }
                else if (CurrentListing.Description is not null)
                {
                    <h4 class="font-bold">Description</h4>
                    <p class="text-left">@CurrentListing.Description</p>
                }
            </section>

            <section class="border-b-2 mb-4 mt-8 border-black pb-4">
                <h4 class="font-bold">Seller</h4>
                <p>
                    @CurrentListing.ApplicationUser.FullName
                </p>
                Phone:
                <a class="text-blue-700 underline" href="tel:@CurrentListing.ApplicationUser.PhoneNumber">
                    @CurrentListing.ApplicationUser.PhoneNumber
                </a>
            </section>

            <PlaceBidForm CurrentListing="CurrentListing" HighestBid="HighestBid" />
        </div>
    </div>
</article>


@code {
    // [Parameter] <-- For testinng purposes
    public Listing CurrentListing { get; set; }

    private Bid? HighestBid { get; set; }

    private string GetTimeDifference(DateTime endDate)
    {
        TimeSpan timeDifference = endDate - DateTime.Today;

        if (timeDifference.TotalDays >= 7)
        {
            // Round down
            double wholeWeeks = Math.Floor(timeDifference.TotalDays / 7);

            // Get the rest value
            double wholeDays = Math.Round(timeDifference.TotalDays % 7);

            return wholeWeeks + " weeks" + (wholeDays > 0 ? $", {wholeDays} days" : "");
        }

        return timeDifference.TotalDays + " days";
    }

    protected override void OnInitialized()
    {
        // For testing purposes
        CurrentListing = ListingHelper.GetListingFromListingID(4, dbContext);
        CurrentListing.ApplicationUser = AccountHelper.GetAccountFromUserID(CurrentListing.ApplicationUserID, dbContext);

        HighestBid = BidHelper.GetHighestBidFromListingID(CurrentListing.ID, dbContext);
    }
}
